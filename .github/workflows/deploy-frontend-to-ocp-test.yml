name: Deploy Frontend-TEST

env:
  # 🖊️ EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  # 🖊️ EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: bbe4c3-test

  # 🖊️ EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}

  IMAGE_NAME: educ-grad-admin-frontend
  DOCKER_ARTIFACTORY_REPO: artifacts.developer.gov.bc.ca/docker-remote
  ARTIFACTORY_REPO: artifacts.developer.gov.bc.ca

  APP_NAME: 'educ-grad-admin'
  REPO_NAME: "educ-grad-admin"
  BRANCH: "main"
  APP_NAME_FRONTEND: "educ-grad-admin-frontend"
  NAMESPACE: bbe4c3
  NAMESPACE_TOOLS: bbe4c3-tools
  COMMON_NAMESPACE: 75e61b
  TAG: "latest"
  TARGET_ENV: "test"

  MIN_CPU: "50m"
  MAX_CPU: "100m"
  MIN_MEM: "200Mi"
  MAX_MEM: "250Mi"
  MIN_REPLICAS: "3"
  MAX_REPLICAS: "3"

  # SITE_URL should have no scheme or port. It will be prepended with https://
  HOST_ROUTE: ${{ secrets.SITE_URL }}

on:
  workflow_dispatch:

jobs:
  openshift-ci-cd:
    name: Deploy Frontend to TEST
    # ubuntu-latest can also be used.
    runs-on: ubuntu-20.04
    environment: test

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

        # https://github.com/redhat-actions/oc-login#readme
      - uses: actions/checkout@v2
      - name: Deploy
        run: |
          set -eux
          # Login to OpenShift and select project
          oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
          oc project ${{ env.OPENSHIFT_NAMESPACE }}
          # Cancel any rollouts in progress
          oc rollout cancel dc/${{ env.IMAGE_NAME }}-dc 2> /dev/null \
          || true && echo "No rollout in progress"

          oc tag ${{ env.NAMESPACE }}-dev/${{ env.REPO_NAME }}-frontend:${{ steps.get-latest-tag.outputs.tag }} ${{ env.NAMESPACE }}-test/${{ env.REPO_NAME }}-frontend:${{ steps.get-latest-tag.outputs.tag }}

          # Process and apply deployment template
          oc process -f tools/openshift/frontend-dc.yaml -p REPO_NAME=educ-grad-admin \
          -p HOST_ROUTE=educ-grad-admin-bbe4c3-test.apps.silver.devops.gov.bc.ca -p NAMESPACE=${{ env.OPENSHIFT_NAMESPACE }} \
          -p APP_NAME=educ-grad-admin -p TAG=${{ steps.get-latest-tag.outputs.tag }} -p MIN_REPLICAS=${{ env.MIN_REPLICAS }} -p MAX_REPLICAS=${{ env.MAX_REPLICAS }} -p MIN_CPU=${{ env.MIN_CPU }} -p MAX_CPU=${{ env.MAX_CPU }} -p MIN_MEM=${{ env.MIN_MEM }} -p MAX_MEM=${{ env.MAX_MEM }} | oc apply -n bbe4c3-test -f -
          
          # Start rollout (if necessary) and follow it
          oc rollout latest dc/${{ env.IMAGE_NAME }}-dc 2> /dev/null \
          || true && echo "Rollout in progress"

          oc logs -f dc/${{ env.IMAGE_NAME }}-dc
          # Get status, returns 0 if rollout is successful
          oc rollout status dc/${{ env.IMAGE_NAME }}-dc

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: 'https://educ-grad-admin-bbe4c3-test.apps.silver.devops.gov.bc.ca'
